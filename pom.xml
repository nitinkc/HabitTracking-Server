<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.habit</groupId>
	<artifactId>habit-tracking-services</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- <packaging>jar</packaging> -->
	<!-- Preparing the WAR file for deployment -->
	<packaging>war</packaging>

	<name>habit-tracking-services</name>
	<description>Server for Habit Tracking App</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<start-class>com.habit.newspringbootwebapplicationforwar</start-class>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-security</artifactId>
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- For generating the WAR -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- marked the embedded servlet container as provided -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--
			To be able to write a Dockerfile that utilizes separate layers
			Plugin added to unpack the JAR to separate JAR into multiple layers,
			one for the project classes, and another one for the heavy dependencies.
		 -->

		 <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-dependency-plugin</artifactId>
		    <executions>
		        <execution>
		            <id>unpack</id>
		            <phase>package</phase>
		            <goals>
		                <goal>unpack</goal>
		            </goals>
		            <configuration>
		                <artifactItems>
		                    <artifactItem>
		                        <groupId>${project.groupId}</groupId>
		                        <artifactId>${project.artifactId}</artifactId>
		                        <version>${project.version}</version>
		                    </artifactItem>
		                </artifactItems>
		            </configuration>
		        </execution>
		    </executions>
			</plugin>

			<!-- To build the Docker images, but also to push it to a Docker registry so others can use it -->
			<plugin>
			    <groupId>com.spotify</groupId>
			    <artifactId>dockerfile-maven-plugin</artifactId>
			    <version>1.4.9</version>
			    <executions>
			        <execution>
			            <id>build</id>
			            <phase>package</phase>
			            <goals>
			                <goal>build</goal>
			            </goals>
			            <configuration>
			                <repository>nitinkc/${project.artifactId}</repository>
			                <tag>${project.version}</tag>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

		</plugins>
	</build>
</project>
